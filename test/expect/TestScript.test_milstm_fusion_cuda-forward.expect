graph(%x.1 : Float(3, 10)
      %hx.1 : Float(3, 20)
      %cx.1 : Float(3, 20)
      %w_ih : Float(80, 10)
      %w_hh : Float(80, 20)
      %alpha.1 : Float(80)
      %beta_i.1 : Float(80)
      %beta_h.1 : Float(80)
      %bias : Float(80)) {
  %9 : Float(10!, 80!) = aten::t(%w_ih)
  %Wx.1 : Float(3, 80) = aten::mm(%x.1, %9)
  %11 : Float(20!, 80!) = aten::t(%w_hh)
  %Uz.1 : Float(3, 80) = aten::mm(%hx.1, %11)
  %13 : Float(3, 80) = aten::mul(%alpha.1, %Wx.1)
  %14 : int[] = prim::Constant[value=[3, 80]]()
  %15 : int = prim::Constant[value=0]()
  %16 : Float(3!, 80) = aten::expand(%beta_i.1, %14, %15)
  %17 : Float(3!, 80) = aten::expand(%beta_h.1, %14, %15)
  %18 : Float(3!, 80) = aten::expand(%bias, %14, %15)
  %hy : Float(3, 20), %20 : Float(3, 20), %cy : Float(3, 20), %outgate.2 : Float(3, 20), %cellgate.2 : Float(3, 20), %forgetgate.2 : Float(3, 20), %ingate.2 : Float(3, 20) = prim::FusionGroup_0[device=0](%cx.1, %Wx.1, %18, %17, %Uz.1, %16, %13)
  return (%hy, %cy, %9, %Wx.1, %11, %Uz.1, %13, %ingate.2, %forgetgate.2, %cellgate.2, %outgate.2, %20);
}
with prim::FusionGroup_0 = graph(%13 : Float(3, 20)
      %107 : Float(3, 80)
      %112 : Float(3!, 80)
      %117 : Float(3!, 80)
      %122 : Float(3, 80)
      %127 : Float(3!, 80)
      %132 : Float(3, 80)) {
  %133 : Dynamic, %134 : Dynamic, %135 : Dynamic, %136 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%132)
  %128 : Dynamic, %129 : Dynamic, %130 : Dynamic, %131 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%127)
  %123 : Dynamic, %124 : Dynamic, %125 : Dynamic, %126 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%122)
  %118 : Dynamic, %119 : Dynamic, %120 : Dynamic, %121 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%117)
  %113 : Dynamic, %114 : Dynamic, %115 : Dynamic, %116 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%112)
  %108 : Dynamic, %109 : Dynamic, %110 : Dynamic, %111 : Dynamic = prim::FusedChunk[chunks=4, dim=1](%107)
  %106 : Float(3, 20) = aten::mul(%136, %126)
  %103 : Float(3, 20) = aten::mul(%131, %111)
  %100 : Float(3, 20) = aten::mul(%135, %125)
  %97 : Float(3, 20) = aten::mul(%133, %123)
  %94 : Float(3, 20) = aten::mul(%128, %108)
  %91 : Float(3, 20) = aten::mul(%134, %124)
  %88 : Float(3, 20) = aten::mul(%129, %109)
  %85 : Float(3, 20) = aten::mul(%130, %110)
  %81 : int = prim::Constant[value=1]()
  %82 : Float(3, 20) = aten::add(%91, %88, %81)
  %78 : Float(3, 20) = aten::mul(%119, %124)
  %74 : int = prim::Constant[value=1]()
  %75 : Float(3, 20) = aten::add(%97, %94, %74)
  %71 : Float(3, 20) = aten::mul(%118, %123)
  %68 : Float(3, 20) = aten::mul(%120, %125)
  %64 : int = prim::Constant[value=1]()
  %65 : Float(3, 20) = aten::add(%100, %85, %64)
  %61 : Float(3, 20) = aten::mul(%121, %126)
  %57 : int = prim::Constant[value=1]()
  %58 : Float(3, 20) = aten::add(%106, %103, %57)
  %53 : int = prim::Constant[value=1]()
  %54 : Float(3, 20) = aten::add(%75, %71, %53)
  %49 : int = prim::Constant[value=1]()
  %50 : Float(3, 20) = aten::add(%82, %78, %49)
  %45 : int = prim::Constant[value=1]()
  %46 : Float(3, 20) = aten::add(%65, %68, %45)
  %41 : int = prim::Constant[value=1]()
  %42 : Float(3, 20) = aten::add(%58, %61, %41)
  %37 : int = prim::Constant[value=1]()
  %38 : Float(3, 20) = aten::add(%54, %113, %37)
  %33 : int = prim::Constant[value=1]()
  %34 : Float(3, 20) = aten::add(%50, %114, %33)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(3, 20) = aten::add(%46, %115, %29)
  %25 : int = prim::Constant[value=1]()
  %26 : Float(3, 20) = aten::add(%42, %116, %25)
  %ingate.2 : Float(3, 20) = aten::sigmoid(%38)
  %forgetgate.2 : Float(3, 20) = aten::sigmoid(%34)
  %cellgate.2 : Float(3, 20) = aten::tanh(%30)
  %outgate.2 : Float(3, 20) = aten::sigmoid(%26)
  %14 : Float(3, 20) = aten::mul(%forgetgate.2, %13)
  %11 : Float(3, 20) = aten::mul(%ingate.2, %cellgate.2)
  %7 : int = prim::Constant[value=1]()
  %cy : Float(3, 20) = aten::add(%14, %11, %7)
  %4 : Float(3, 20) = aten::tanh(%cy)
  %hy : Float(3, 20) = aten::mul(%outgate.2, %4)
  return (%hy, %4, %cy, %outgate.2, %cellgate.2, %forgetgate.2, %ingate.2);
}
